# -*- coding: utf-8 -*-
"""2223777.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bn1epKZL6cEruXyGedkjaYvRmTaVoctv

Step 1
"""

import pandas as pd

data = {
    'student_id': [101, 101, 101, 101, 101, 102, 102, 102, 102,
                   103, 103, 103, 103, 103, 104, 104, 104, 104, 104],
    'attendance_date': ['2024-03-01', '2024-03-02', '2024-03-03', '2024-03-04',
                        '2024-03-05', '2024-03-02', '2024-03-03', '2024-03-04',
                        '2024-03-05', '2024-03-05', '2024-03-06', '2024-03-07',
                        '2024-03-08', '2024-03-09', '2024-03-01', '2024-03-02',
                        '2024-03-03', '2024-03-04', '2024-03-05'],
    'attendance_status': ['Absent', 'Absent', 'Absent', 'Absent',
                          'Present', 'Absent', 'Absent', 'Absent', 'Absent',
                          'Absent', 'Absent', 'Absent', 'Absent', 'Absent',
                          'Present', 'Present', 'Absent', 'Present', 'Present']
}

df = pd.DataFrame(data)
df['attendance_date'] = pd.to_datetime(df['attendance_date'])
df = df.sort_values(by=['student_id', 'attendance_date'])

def find_absence_streaks(df):
    results = []

    for student_id, group in df.groupby('student_id'):
        group = group[group['attendance_status'] == 'Absent'].copy()
        group['gap'] = group['attendance_date'].diff().dt.days.ne(1).cumsum()

        streaks = group.groupby('gap').agg(
            absence_start_date=('attendance_date', 'first'),
            absence_end_date=('attendance_date', 'last'),
            total_absent_days=('attendance_date', 'count')
        ).reset_index(drop=True)


        streaks = streaks[streaks['total_absent_days'] > 3]
        if not streaks.empty:
            latest_streak = streaks.iloc[-1]
            results.append((student_id, latest_streak['absence_start_date'], latest_streak['absence_end_date'], latest_streak['total_absent_days']))

    return pd.DataFrame(results, columns=['student_id', 'absence_start_date', 'absence_end_date', 'total_absent_days'])

result = find_absence_streaks(df)

print(result)

"""Step 2"""

import pandas as pd
import re

absence_data = {
    'student_id': [101, 102, 103],
    'absence_start_date': ['2024-03-01', '2024-03-02', '2024-03-05'],
    'absence_end_date': ['2024-03-04', '2024-03-05', '2024-03-09'],
    'total_absent_days': [4, 4, 5]
}

students_data = {
    'student_id': [101, 102, 103, 104, 105],
    'student_name': ['Alice Johnson', 'Bob Smith', 'Charlie Brown', 'David Lee', 'Eva White'],
    'parent_email': ['alice_parent@example.com', 'bob_parent@example.com', 'invalid_email.com',
                     '@gmail.com', 'eva_white@example.com']
}

df_absence = pd.DataFrame(absence_data)
df_students = pd.DataFrame(students_data)


def valid_email(email):
    return re.match(r'^[a-zA-Z_][a-zA-Z0-9_]*@[a-zA-Z]+\.[a-zA-Z]{2,}$', email)


df_final = df_absence.merge(df_students, on='student_id', how='left')

df_final['email'] = df_final['parent_email'].apply(lambda x: x if valid_email(x) else None)
df_final[['absence_start_date', 'absence_end_date']] = df_final[['absence_start_date', 'absence_end_date']].apply(pd.to_datetime)
df_final[['absence_start_date', 'absence_end_date']] = df_final[['absence_start_date', 'absence_end_date']].apply(lambda x: x.dt.strftime('%d-%m-%Y'))

df_final['msg'] = df_final.apply(lambda r: f"Dear Parent, your child {r['student_name']} was absent from {r['absence_start_date']} to {r['absence_end_date']} for {r['total_absent_days']} days. Please ensure their attendance improves." if r['email'] else None, axis=1)

df_final = df_final[['student_id', 'absence_start_date', 'absence_end_date', 'total_absent_days', 'email', 'msg']]

print(df_final)